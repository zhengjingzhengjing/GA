(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{354:function(t,s,e){"use strict";e.r(s);var a=e(3),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。什么是状态管理？可以简单理解为管理数据流，多页面共享一个data库（全局）。\n")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000008861913",target:"_blank",rel:"noopener noreferrer"}},[t._v("教程"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/OnVcgBQlSLHiR12WXN5nbQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("超好"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[t._v("0, 需要在各个组件之间共享的数据 就是vuex状态管理")]),t._v(" "),e("p",[t._v("1,Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。")]),t._v(" "),e("p",[t._v("2,你不能直接改变 store 中的状态。改变 store 中的状态的唯一途径就是"),e("strong",[t._v("显式地提交 (commit) mutation")]),t._v("。这样使得我们可以方便地跟踪每一个状态的变化，从而让我们能够实现一些工具帮助我们更好地了解我们的应用。")]),t._v(" "),e("p",[t._v("3,"),e("strong",[t._v("更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。")])]),t._v(" "),e("p",[t._v("4,一个.vue中的同级组件的数据流通")]),t._v(" "),e("p",[t._v("5,刷新页面，vuex中的state存放的数据会丢失。因为它只是在当前页面初始化生成的一个实例，一刷新页面所有数据重新生成，数据就没了。")]),t._v(" "),e("p",[t._v("6,vuex只能用于单个页面中不同组件（例如兄弟组件）的数据流通。")]),t._v(" "),e("p",[t._v("7,小项目加入vuex，代码成本比较高，你得写各种action，mutation，dispatch交互。")]),t._v(" "),e("p",[t._v("8,大项目，组件多，需要一个状态机来解决同一个页面内不同组件之间的数据交流。")])]),t._v(" "),e("p",[t._v("State、Actions、Mutations、Getters、Moudles")]),t._v(" "),e("h2",{attrs:{id:"state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[t._v("#")]),t._v(" State")]),t._v(" "),e("p",[t._v("Vuex 使用 单一状态树 —— State，用一个对象就包含了全部的应用层级状态。")]),t._v(" "),e("p",[t._v("state是vuex自己维护的一份状态数据。")]),t._v(" "),e("p",[e("strong",[t._v("就是放页面共享数据的地方。（私有数据还是放自己.vue文件更好）")])]),t._v(" "),e("h2",{attrs:{id:"getters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getters"}},[t._v("#")]),t._v(" Getters")]),t._v(" "),e("p",[t._v("Vuex 允许我们在 store 中定义『getters』（可以认为是 store 的计算属性）。"),e("br"),t._v("\nGetters 接受 state 作为其第一个参数：Getters 会暴露为 store.getters 对象供调用。")]),t._v(" "),e("h2",{attrs:{id:"actions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#actions"}},[t._v("#")]),t._v(" Actions")]),t._v(" "),e("p",[t._v("对于store中数据的修改操作动作在action中提交。"),e("br"),t._v("\nAction 类似于 mutation，不同在于："),e("strong",[t._v("Action 提交的是 mutation，而不是直接变更状态。")]),t._v("\nAction 可以包含任意异步操作。"),e("br"),t._v("\n就是说异步方法放入Actions，如ajax请求，请求获取到数据之后显示提交mutation里面的方法来改变state。")]),t._v(" "),e("h2",{attrs:{id:"mutations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mutations"}},[t._v("#")]),t._v(" Mutations")]),t._v(" "),e("p",[e("strong",[t._v("更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。")]),t._v("\n一条重要的原则就是要记住 mutation 必须是同步函数。"),e("br"),t._v("\n组件中使用 this.$store.commit('xxx') 提交，在action里面使用commit('xxx') 提交。")]),t._v(" "),e("h2",{attrs:{id:"modules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modules"}},[t._v("#")]),t._v(" Modules")]),t._v(" "),e("p",[t._v("为了方便操作和管理，模块化。"),e("br"),t._v("\n由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。"),e("br"),t._v("\n为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const store = new Vuex.Store({\n  state: {\n    count: 0\n  },\n  mutations: {\n    increment (state) {\n      state.count++\n    }\n  }\n})\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);